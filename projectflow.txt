1. Create git repo and clone it in local
2. Create mycode.py and add code to it. (it will save a csv file to a new "data" folder)
3. Do a git add-commit-push before initializing dvc
4. Install dvc using pip (pip install dvc)
5. Make sure, if suggested during install, to add the path of dvc install to windows path
   variable. else dvc will not be detected by vscode
6. Post install, close vscode and terminal, refresh and restart
7. Now go back to the local git rep do "dvc init" (creates .dvcignore, .dvc) - this will 
   initialize dvc similar to how we initialized git
8. We need to specify a local or remote (eg. S3 bucket location for maintaining the data 
   versions through dvc) 
9. "mkdir S3" : creates a new S3 directory locally (else it will be an url to s3 bucket)
   Initially this will be an empty folder since we have not asked dvc to save or track 
   any files in this location
10. "dvc remote add -d myremote S3" : enables dvc to track the S3 folder
11. Next "dvc add data/" 
    Now it will ask to do: ("git rm -r --cached 'data'" and "git commit -m "stop 
    tracking data""). Because initially we were tracking data/ folder from git so now we 
    remove it for DVC to handle.
12. Again we do "dvc add data/" (creates data.dvc) then "git add .gitignore data.dvc"
13. Do a git add-commit-push to mark this stage as first version of data
14. Also check "dvc status" to see if dvc files are up to date
15. Now do "dvc commit" and "dvc push" to push the data files in the S3 folder where 
    we originally wanted the data versions to be present
16. Post the above command you will now see S3 folder will create files which will have 
    the md5 id (through which data version will be tracked) as well as actual data related
    to the specific version
17. 



